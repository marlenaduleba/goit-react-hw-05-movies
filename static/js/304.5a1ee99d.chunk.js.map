{"version":3,"file":"static/js/304.5a1ee99d.chunk.js","mappings":"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","sources":["components/Container/Container.jsx","components/ImagePlaceholder/ImagePlaceholder.js","components/Movie/Movie.styled.js","components/Movie/MovieItem/MovieItem.jsx","components/Movie/MovieList/MovieList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","service/api.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  max-width: 1170px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n\n`;\n\nconst Container = ({children}) => {\n    return <MainContainer>{children}</MainContainer>;\n}\n\nContainer.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired\n}\n\nexport default Container;","export const ImagePlaceholder = pathImage => {\n    if (!pathImage) {\n      return 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1665px-No-Image-Placeholder.svg.png';\n    }\n\n    if (pathImage.includes('https')) {\n        return pathImage.slice(1, pathImage.length);\n      }\n  \n    if (pathImage[0] === '/') {\n      return `https://image.tmdb.org/t/p/w500${pathImage}`;\n    }\n  \n    return `https://image.tmdb.org/t/p/w500/${pathImage}`;\n  };","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-decoration: none;\n  padding: 5px;\n  border-radius: 5px;\n  /* border-radius: 4px; */\n  color: black;\n  font-weight: 500;\n  &:hover {\n    color: white;\n    background-color: #FF6700;\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 16px;\n`;\n\nexport const Item = styled.li`\n  flex-basis: calc((100% - 70px) / 5);\n`;","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Item, Link } from '../Movie.styled';\nimport { ImagePlaceholder } from 'components/ImagePlaceholder/ImagePlaceholder';\n\nconst MovieItem = ({ id, poster_path, title }) => {\n  const location = useLocation();\n\n  return (\n    <Item key={id}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <img width=\"250\" src={ImagePlaceholder(poster_path)} alt={title} />\n\n        <p>{title}</p>\n      </Link>\n    </Item>\n  );\n};\n\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  poster_path: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\nexport default MovieItem;\n","import MovieItem from 'components/Movie/MovieItem/MovieItem';\nimport PropTypes from 'prop-types';\nimport { List } from 'components/Movie/Movie.styled';\n\nconst MovieList = ({ films }) => {\n  return (\n    <List>\n      {films.map(({ id, title, poster_path }) => (\n        <MovieItem key={id} id={id} title={title} poster_path={poster_path} />\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  margin-bottom: 16px;\n  padding: 10px;\n  border-radius: 5px;\n  color: white;\n  background-color: #FF6700;\n`;","import { useState, useEffect } from 'react';\nimport MovieList from 'components/Movie/MovieList/MovieList';\nimport Container from 'components/Container/Container';\nimport { Title } from './Home.styled';\n\nimport { api } from 'service/api';\n\n const Home = () => {\n  const [films, setFilms] = useState([]);\n\n  useEffect(() => {\n    api.fetchFilms().then(({ data }) => {\n      setFilms(data.results);\n    });\n  }, []);\n\n  return (\n    <main>\n      <Container>\n        <Title>Trending today</Title>\n\n        {films.length > 0 && <MovieList films={films} />}\n      </Container>\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from \"axios\";\n\nconst API_KEY = '96b1936b39533cd9542a6bf2c841f4c7';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchFilms = async () => {\n    try {\n        const url = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`;\n        const data = await axios.get(url);\n\n        return data;\n        \n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport const fetchFilmById = async id => {\n  try {\n    const url = `${BASE_URL}/movie/${id}?api_key=${API_KEY}`;\n    const  data  = await axios.get(url);\n\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n\nexport const fetchFilmsByName = async filmName => {\n  try {\n    const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${filmName}`;\n    const  data  = await axios.get(url);\n\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n  \n  export const fetchFilmCast = async id => {\n    try {\n      const url = `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`;\n      const  data  = await axios.get(url);\n  \n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  \n  export const fetchFilmReviews = async id => {\n    try {\n      const url = `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`;\n      const  data  = await axios.get(url);\n  \n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  \n  export const api = {\n    fetchFilms,\n    fetchFilmsByName,\n    fetchFilmById,\n    fetchFilmCast,\n    fetchFilmReviews,\n  };\n"],"names":["MainContainer","styled","children","ImagePlaceholder","pathImage","includes","slice","length","Link","NavLink","List","Item","id","poster_path","title","location","useLocation","to","state","from","width","src","alt","films","map","Title","useState","setFilms","useEffect","api","then","data","results","Container","MovieList","API_KEY","BASE_URL","fetchFilms","url","axios","console","error","fetchFilmById","fetchFilmsByName","filmName","fetchFilmCast","fetchFilmReviews"],"sourceRoot":""}