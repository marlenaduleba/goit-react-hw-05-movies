{"version":3,"file":"static/js/395.727f8083.chunk.js","mappings":"uKAAO,IAAMA,EAAmB,SAAAC,GAC5B,OAAKA,EAIDA,EAAUC,SAAS,SACZD,EAAUE,MAAM,EAAGF,EAAUG,QAGnB,MAAjBH,EAAU,GACN,kCAAN,OAAyCA,GAGrC,mCAAN,OAA0CA,GAXjC,wHAYV,C,mJCZUI,EAAOC,EAAAA,GAAAA,GAAH,mIAQJC,EAAOD,EAAAA,GAAAA,GAAH,wDAKJE,EAAOF,EAAAA,GAAAA,IAAH,uI,SCgCjB,EAtCa,WACX,OAAwBG,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOC,EAAP,KAAaC,EAAb,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAQR,OANAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAAA,cAAkBH,GAAII,MAAK,YAAa,IAAXC,EAAU,EAAVA,KAC3BN,EAAQM,EAAKP,KACd,GACF,GAAE,CAACE,IAE6B,IAA7BM,OAAOC,KAAKT,GAAMN,QACb,qFAGP,SAACC,EAAD,UACCK,EAAKU,KAAI,SAAAC,GAAM,OACd,UAACd,EAAD,YACE,gBACEe,MAAM,MACNC,KAAKvB,EAAAA,EAAAA,GAAiBqB,EAAOG,cAC7BC,IAAKJ,EAAOK,iBAEd,UAAClB,EAAD,YACE,wBAAKa,EAAOK,cAAgBL,EAAOK,cAAgB,aACnD,0BACE,uCAAmB,IAClBL,EAAOM,UAAYN,EAAOM,UAAY,kBAVlCN,EAAOT,GADJ,KAkBnB,C,mGCzCKgB,EAAU,mCACVC,EAAW,+BAEJC,EAAU,mCAAG,sGAEZC,EAFY,UAEHF,EAFG,uCAEoCD,GAFpC,SAGCI,EAAAA,EAAAA,IAAUD,GAHX,cAGZd,EAHY,yBAKXA,GALW,gCAQlBgB,QAAQC,MAAR,MARkB,yDAAH,qDAYVC,EAAa,mCAAG,WAAMvB,GAAN,yFAEnBmB,EAFmB,UAEVF,EAFU,kBAEQjB,EAFR,oBAEsBgB,GAFtB,SAGJI,EAAAA,EAAAA,IAAUD,GAHN,cAGlBd,EAHkB,yBAKlBA,GALkB,gCAOzBgB,QAAQC,MAAR,MAPyB,yDAAH,sDAYbE,EAAgB,mCAAG,WAAMC,GAAN,yFAEtBN,EAFsB,UAEbF,EAFa,iCAEoBD,EAFpB,kBAEqCS,GAFrC,SAGPL,EAAAA,EAAAA,IAAUD,GAHH,cAGrBd,EAHqB,yBAKrBA,GALqB,gCAO5BgB,QAAQC,MAAR,MAP4B,yDAAH,sDAWdI,EAAa,mCAAG,WAAM1B,GAAN,yFAEnBmB,EAFmB,UAEVF,EAFU,kBAEQjB,EAFR,4BAE8BgB,GAF9B,SAGJI,EAAAA,EAAAA,IAAUD,GAHN,cAGlBd,EAHkB,yBAKlBA,GALkB,gCAOzBgB,QAAQC,MAAR,MAPyB,yDAAH,sDAWbK,EAAgB,mCAAG,WAAM3B,GAAN,yFAEtBmB,EAFsB,UAEbF,EAFa,kBAEKjB,EAFL,4BAE2BgB,GAF3B,SAGPI,EAAAA,EAAAA,IAAUD,GAHH,cAGrBd,EAHqB,yBAKrBA,GALqB,gCAO5BgB,QAAQC,MAAR,MAP4B,yDAAH,sDAWhBnB,EAAM,CACjBe,WAAAA,EACAM,iBAAAA,EACAD,cAAAA,EACAG,cAAAA,EACAC,iBAAAA,E","sources":["components/ImagePlaceholder/ImagePlaceholder.js","pages/Movies/Cast/Cast.styled.js","pages/Movies/Cast/Cast.jsx","service/api.js"],"sourcesContent":["export const ImagePlaceholder = pathImage => {\n    if (!pathImage) {\n      return 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1665px-No-Image-Placeholder.svg.png';\n    }\n\n    if (pathImage.includes('https')) {\n        return pathImage.slice(1, pathImage.length);\n      }\n  \n    if (pathImage[0] === '/') {\n      return `https://image.tmdb.org/t/p/w500${pathImage}`;\n    }\n  \n    return `https://image.tmdb.org/t/p/w500/${pathImage}`;\n  };","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  align-items: center;\n  justify-content: center;\n`;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { api } from 'service/api';\n\nimport { ImagePlaceholder } from 'components/ImagePlaceholder/ImagePlaceholder';\nimport { List, Item, Info } from './Cast.styled';\n\n\nconst Cast = () => {\n  const [cast, setCast] = useState({});\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    api.fetchFilmCast(id).then(({data}) => {\n      setCast(data.cast);\n    });\n  }, [id]);\n\n  if (Object.keys(cast).length === 0) {\n    return <p>We don't have any information about cast for this movie.</p>;\n  }\n  return (\n    <List>\n    {cast.map(person => (\n      <Item key={person.id}>\n        <img\n          width=\"100\"\n          src={ImagePlaceholder(person.profile_path)}\n          alt={person.original_name}\n        />\n        <Info>\n          <h3>{person.original_name ? person.original_name : 'No Info'}</h3>\n          <p>\n            <b>Character: </b>{' '}\n            {person.character ? person.character : 'No Info'}\n          </p>\n        </Info>\n      </Item>\n    ))}\n  </List>\n  );\n};\n\n\n\nexport default Cast;","import axios from \"axios\";\n\nconst API_KEY = '96b1936b39533cd9542a6bf2c841f4c7';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchFilms = async () => {\n    try {\n        const url = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`;\n        const data = await axios.get(url);\n\n        return data;\n        \n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport const fetchFilmById = async id => {\n  try {\n    const url = `${BASE_URL}/movie/${id}?api_key=${API_KEY}`;\n    const  data  = await axios.get(url);\n\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n\nexport const fetchFilmsByName = async filmName => {\n  try {\n    const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${filmName}`;\n    const  data  = await axios.get(url);\n\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n  \n  export const fetchFilmCast = async id => {\n    try {\n      const url = `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`;\n      const  data  = await axios.get(url);\n  \n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  \n  export const fetchFilmReviews = async id => {\n    try {\n      const url = `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`;\n      const  data  = await axios.get(url);\n  \n      return data;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  \n  export const api = {\n    fetchFilms,\n    fetchFilmsByName,\n    fetchFilmById,\n    fetchFilmCast,\n    fetchFilmReviews,\n  };\n"],"names":["ImagePlaceholder","pathImage","includes","slice","length","List","styled","Item","Info","useState","cast","setCast","id","useParams","useEffect","api","then","data","Object","keys","map","person","width","src","profile_path","alt","original_name","character","API_KEY","BASE_URL","fetchFilms","url","axios","console","error","fetchFilmById","fetchFilmsByName","filmName","fetchFilmCast","fetchFilmReviews"],"sourceRoot":""}