{"version":3,"file":"static/js/395.2d98dc09.chunk.js","mappings":"uKAAO,IAAMA,EAAmB,SAAAC,GAC5B,OAAKA,EAIDA,EAAUC,SAAS,SACZD,EAAUE,MAAM,EAAGF,EAAUG,QAGnB,MAAjBH,EAAU,GACN,kCAAN,OAAyCA,GAGrC,mCAAN,OAA0CA,GAXjC,wHAYV,C,mJCZUI,EAAOC,EAAAA,GAAAA,GAAH,mIAQJC,EAAOD,EAAAA,GAAAA,GAAH,wDAKJE,EAAOF,EAAAA,GAAAA,IAAH,uI,SCoCjB,EA1Ca,WACX,OAAwBG,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOC,EAAP,KAAaC,EAAb,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAYR,OAVAE,EAAAA,EAAAA,YAAU,WACR,IACEC,EAAAA,EAAAA,cAAkBH,GAAII,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAC5BN,EAAQM,EAAKP,KACd,GAGF,CAFC,MAAOQ,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACN,IAE6B,IAA7BS,OAAOC,KAAKZ,GAAMN,QACb,qFAGP,SAACC,EAAD,UACCK,EAAKa,KAAI,SAAAC,GAAM,OACd,UAACjB,EAAD,YACE,gBACEkB,MAAM,MACNC,KAAK1B,EAAAA,EAAAA,GAAiBwB,EAAOG,cAC7BC,IAAKJ,EAAOK,iBAEd,UAACrB,EAAD,YACE,wBAAKgB,EAAOK,cAAgBL,EAAOK,cAAgB,aACnD,0BACE,uCAAmB,IAClBL,EAAOM,UAAYN,EAAOM,UAAY,kBAVlCN,EAAOZ,GADJ,KAkBnB,C,wFC7CKmB,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAGPC,EAAU,mCAAG,8FAAkBL,EAASM,IAAT,uBAAlB,mFAAH,qDAEVC,EAAgB,mCAAG,WAAMC,GAAN,iFACjBR,EAASM,IAAT,gBAA8B,CAAEH,OAAQ,CAAEK,MAAAA,KADzB,mFAAH,sDAGhBC,EAAa,mCAAG,WAAM5B,GAAN,iFAAkBmB,EAASM,IAAT,iBAAuBzB,IAAzC,mFAAH,sDAEb6B,EAAa,mCAAG,WAAM7B,GAAN,iFAAkBmB,EAASM,IAAT,iBAAuBzB,EAAvB,aAAlB,mFAAH,sDAEb8B,EAAgB,mCAAG,WAAM9B,GAAN,iFAAkBmB,EAASM,IAAT,iBAAuBzB,EAAvB,aAAlB,mFAAH,sDAETG,EAAM,CACjBqB,WAAAA,EACAE,iBAAAA,EACAE,cAAAA,EACAC,cAAAA,EACAC,iBAAAA,E","sources":["components/ImagePlaceholder/ImagePlaceholder.js","pages/Movies/Cast/Cast.styled.js","pages/Movies/Cast/Cast.jsx","service/api.js"],"sourcesContent":["export const ImagePlaceholder = pathImage => {\n    if (!pathImage) {\n      return 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1665px-No-Image-Placeholder.svg.png';\n    }\n\n    if (pathImage.includes('https')) {\n        return pathImage.slice(1, pathImage.length);\n      }\n  \n    if (pathImage[0] === '/') {\n      return `https://image.tmdb.org/t/p/w500${pathImage}`;\n    }\n  \n    return `https://image.tmdb.org/t/p/w500/${pathImage}`;\n  };","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  align-items: center;\n  justify-content: center;\n`;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { api } from 'service/api';\n\nimport { ImagePlaceholder } from 'components/ImagePlaceholder/ImagePlaceholder';\nimport { List, Item, Info } from './Cast.styled';\n\n\nconst Cast = () => {\n  const [cast, setCast] = useState({});\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    try {\n      api.fetchFilmCast(id).then(({ data }) => {\n        setCast(data.cast);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [id]);\n\n  if (Object.keys(cast).length === 0) {\n    return <p>We don't have any information about cast for this movie.</p>;\n  }\n  return (\n    <List>\n    {cast.map(person => (\n      <Item key={person.id}>\n        <img\n          width=\"100\"\n          src={ImagePlaceholder(person.profile_path)}\n          alt={person.original_name}\n        />\n        <Info>\n          <h3>{person.original_name ? person.original_name : 'No Info'}</h3>\n          <p>\n            <b>Character: </b>{' '}\n            {person.character ? person.character : 'No Info'}\n          </p>\n        </Info>\n      </Item>\n    ))}\n  </List>\n  );\n};\n\n\n\nexport default Cast;","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '96b1936b39533cd9542a6bf2c841f4c7',\n  },\n});\nconst fetchFilms = async () => await instance.get(`/trending/movie/day`);\n\nconst fetchFilmsByName = async query =>\n  await instance.get(`/search/movie`, { params: { query } });\n\nconst fetchFilmById = async id => await instance.get(`/movie/${id}`);\n\nconst fetchFilmCast = async id => await instance.get(`/movie/${id}/credits`);\n\nconst fetchFilmReviews = async id => await instance.get(`/movie/${id}/reviews`);\n\nexport const api = {\n  fetchFilms,\n  fetchFilmsByName,\n  fetchFilmById,\n  fetchFilmCast,\n  fetchFilmReviews,\n};\n"],"names":["ImagePlaceholder","pathImage","includes","slice","length","List","styled","Item","Info","useState","cast","setCast","id","useParams","useEffect","api","then","data","error","console","log","Object","keys","map","person","width","src","profile_path","alt","original_name","character","instance","axios","baseURL","params","api_key","fetchFilms","get","fetchFilmsByName","query","fetchFilmById","fetchFilmCast","fetchFilmReviews"],"sourceRoot":""}