{"version":3,"file":"static/js/304.ab765bc1.chunk.js","mappings":"yKAGMA,EAAgBC,EAAAA,GAAAA,IAAH,6OAwBnB,IAXkB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAChB,OAAO,SAACF,EAAD,UAAgBE,GAC1B,C,uDClBM,IAAMC,EAAmB,SAACC,GAA6B,IAAlBC,EAAiB,uDAAR,IACjD,OAAKD,EAIDA,EAAUE,SAAS,SACZF,EAAUG,MAAM,EAAGH,EAAUI,QAGnB,MAAjBJ,EAAU,GACN,+BAAN,OAAsCC,GAAtC,OAA+CD,GAG3C,+BAAN,OAAsCC,EAAtC,YAAgDD,GAXvC,wHAYV,C,wGCXUK,GAAOR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,mUAiBJU,EAAOV,EAAAA,GAAAA,GAAH,wGAOJW,EAAOX,EAAAA,GAAAA,GAAH,gE,mBCHjB,EAnBkB,SAAC,GAAgC,IAA9BY,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MAC9BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACL,EAAD,WACE,UAACH,EAAD,CAAMS,GAAE,kBAAaL,GAAMM,MAAO,CAAEC,KAAMJ,GAA1C,WACE,gBAAKK,MAAM,MAAMC,KAAKnB,EAAAA,EAAAA,GAAiBW,GAAcS,IAAKR,KAE1D,uBAAIA,QAJGF,EAQd,ECOD,EApBkB,SAAC,GAAe,IAAbW,EAAY,EAAZA,MACnB,OACE,SAACb,EAAD,UACGa,EAAMC,KAAI,gBAAGZ,EAAH,EAAGA,GAAIE,EAAP,EAAOA,MAAOD,EAAd,EAAcA,YAAd,OACT,SAAC,EAAD,CAAoBD,GAAIA,EAAIE,MAAOA,EAAOD,YAAaA,GAAvCD,EADP,KAKhB,C,0HCVYa,E,QAAQzB,GAAAA,GAAH,wI,mBC6BlB,EAxBc,WACZ,OAA0B0B,EAAAA,EAAAA,UAAS,IAAnC,eAAOH,EAAP,KAAcI,EAAd,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACR,IACEC,EAAAA,EAAAA,aAAiBC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACvBJ,EAASI,EAAKC,QACf,GAGF,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,KAGD,2BACE,UAACG,EAAA,EAAD,YACE,SAACX,EAAD,6BAECF,EAAMhB,OAAS,IAAK,SAAC8B,EAAA,EAAD,CAAWd,MAAOA,QAI9C,C,wFC3BKe,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAKPC,EAAgB,mCAAG,WAAMC,GAAN,0FACtBN,EAASO,IAAT,gBAA8B,CAAEJ,OAAQ,CAAEG,MAAAA,MADpB,2CAAH,sDAGhBE,EAAa,mCAAG,WAAMlC,GAAN,0FAAa0B,EAASO,IAAT,iBAAuBjC,KAApC,2CAAH,sDAEbmC,EAAa,mCAAG,WAAMnC,GAAN,0FAAa0B,EAASO,IAAT,iBAAuBjC,EAAvB,cAAb,2CAAH,sDAEboC,EAAgB,mCAAG,WAAMpC,GAAN,0FAAa0B,EAASO,IAAT,iBAAuBjC,EAAvB,cAAb,2CAAH,sDAETiB,EAAM,CACjBoB,WAZkB,kBAAOX,EAASO,IAAT,sBAAP,EAalBF,iBAAAA,EACAG,cAAAA,EACAC,cAAAA,EACAC,iBAAAA,E","sources":["components/Container/Container.jsx","components/ImagePlaceholder/ImagePlaceholder.js","components/Movie/Movie.styled.js","components/Movie/MovieItem/MovieItem.jsx","components/Movie/MovieList/MovieList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","service/api.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  max-width: 1170px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n\n`;\n\nconst Container = ({children}) => {\n    return <MainContainer>{children}</MainContainer>;\n}\n\nContainer.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired\n}\n\nexport default Container;","export const ImagePlaceholder = (pathImage, height = 300) => {\n    if (!pathImage) {\n      return 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1665px-No-Image-Placeholder.svg.png';\n    }\n\n    if (pathImage.includes('https')) {\n        return pathImage.slice(1, pathImage.length);\n      }\n  \n    if (pathImage[0] === '/') {\n      return `https://image.tmdb.org/t/p/w${height}${pathImage}`;\n    }\n  \n    return `https://image.tmdb.org/t/p/w${height}/${pathImage}`;\n  };","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-decoration: none;\n  padding: 5px;\n  border-radius: 5px;\n  /* border-radius: 4px; */\n  color: black;\n  font-weight: 500;\n  &:hover {\n    color: white;\n    background-color: #FF6700;\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 16px;\n`;\n\nexport const Item = styled.li`\n  flex-basis: calc((100% - 70px) / 5);\n`;","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Item, Link } from '../Movie.styled';\nimport { ImagePlaceholder } from 'components/ImagePlaceholder/ImagePlaceholder';\n\nconst MovieItem = ({ id, poster_path, title }) => {\n  const location = useLocation();\n\n  return (\n    <Item key={id}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <img width=\"250\" src={ImagePlaceholder(poster_path)} alt={title} />\n\n        <p>{title}</p>\n      </Link>\n    </Item>\n  );\n};\n\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  poster_path: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\nexport default MovieItem;\n","import MovieItem from 'components/Movie/MovieItem/MovieItem';\nimport PropTypes from 'prop-types';\nimport { List } from 'components/Movie/Movie.styled';\n\nconst MovieList = ({ films }) => {\n  return (\n    <List>\n      {films.map(({ id, title, poster_path }) => (\n        <MovieItem key={id} id={id} title={title} poster_path={poster_path} />\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  margin-bottom: 16px;\n  padding: 10px;\n  border-radius: 5px;\n  color: white;\n  background-color: #FF6700;\n`;","import { useState, useEffect } from 'react';\nimport MovieList from 'components/Movie/MovieList/MovieList';\nimport Container from 'components/Container/Container';\nimport { Title } from './Home.styled';\n\nimport { api } from 'service/api';\n\n const Home = () => {\n  const [films, setFilms] = useState([]);\n\n  useEffect(() => {\n    try {\n      api.fetchFilms().then(({ data }) => {\n        setFilms(data.results);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  return (\n    <main>\n      <Container>\n        <Title>Trending today</Title>\n\n        {films.length > 0 && <MovieList films={films} />}\n      </Container>\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '96b1936b39533cd9542a6bf2c841f4c7',\n  },\n})\nconst fetchFilms =  () =>  instance.get(`/trending/movie/day`);\n\nconst fetchFilmsByName = async query =>\n   instance.get(`/search/movie`, { params: { query } });\n\nconst fetchFilmById = async id =>  instance.get(`/movie/${id}`);\n\nconst fetchFilmCast = async id =>  instance.get(`/movie/${id}/credits`);\n\nconst fetchFilmReviews = async id =>  instance.get(`/movie/${id}/reviews`);\n\nexport const api = {\n  fetchFilms,\n  fetchFilmsByName,\n  fetchFilmById,\n  fetchFilmCast,\n  fetchFilmReviews,\n};\n"],"names":["MainContainer","styled","children","ImagePlaceholder","pathImage","height","includes","slice","length","Link","NavLink","List","Item","id","poster_path","title","location","useLocation","to","state","from","width","src","alt","films","map","Title","useState","setFilms","useEffect","api","then","data","results","error","console","log","Container","MovieList","instance","axios","baseURL","params","api_key","fetchFilmsByName","query","get","fetchFilmById","fetchFilmCast","fetchFilmReviews","fetchFilms"],"sourceRoot":""}