{"version":3,"file":"static/js/599.202fc532.chunk.js","mappings":"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","sources":["components/Container/Container.jsx","components/ImagePlaceholder/ImagePlaceholder.js","components/Movie/Movie.styled.js","components/Movie/MovieItem/MovieItem.jsx","components/Movie/MovieList/MovieList.jsx","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx","service/api.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  max-width: 1170px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n\n`;\n\nconst Container = ({children}) => {\n    return <MainContainer>{children}</MainContainer>;\n}\n\nContainer.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired\n}\n\nexport default Container;","export const ImagePlaceholder = (pathImage, height = 300) => {\n    if (!pathImage) {\n      return 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1665px-No-Image-Placeholder.svg.png';\n    }\n\n    if (pathImage.includes('https')) {\n        return pathImage.slice(1, pathImage.length);\n      }\n  \n    if (pathImage[0] === '/') {\n      return `https://image.tmdb.org/t/p/w${height}${pathImage}`;\n    }\n  \n    return `https://image.tmdb.org/t/p/w${height}/${pathImage}`;\n  };","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-decoration: none;\n  padding: 5px;\n  border-radius: 5px;\n  /* border-radius: 4px; */\n  color: black;\n  font-weight: 500;\n  &:hover {\n    color: white;\n    background-color: #FF6700;\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 16px;\n`;\n\nexport const Item = styled.li`\n  flex-basis: calc((100% - 70px) / 5);\n`;","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Item, Link } from '../Movie.styled';\nimport { ImagePlaceholder } from 'components/ImagePlaceholder/ImagePlaceholder';\n\nconst MovieItem = ({ id, poster_path, title }) => {\n  const location = useLocation();\n\n  return (\n    <Item key={id}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <img width=\"250\" src={ImagePlaceholder(poster_path)} alt={title} />\n\n        <p>{title}</p>\n      </Link>\n    </Item>\n  );\n};\n\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  poster_path: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\nexport default MovieItem;\n","import MovieItem from 'components/Movie/MovieItem/MovieItem';\nimport PropTypes from 'prop-types';\nimport { List } from 'components/Movie/Movie.styled';\n\nconst MovieList = ({ films }) => {\n  return (\n    <List>\n      {films.map(({ id, title, poster_path }) => (\n        <MovieItem key={id} id={id} title={title} poster_path={poster_path} />\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://cdn-icons-png.flaticon.com/512/1086/1086933.png');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;","import { useSearchParams } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\nimport {\n  SearchForm,\n  SearchFormButton,\n  SearchFormButtonLabel,\n  SearchFormInput,\n} from './Searchbar.styled';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('name') ?? '';\n\n  const handleInputChange = e => {\n    const name = e.target.value;\n    //   onChange(e.target.value);\n\n    const nextParams = name !== '' ? { name } : {};\n    setSearchParams(nextParams);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n  };\n\n  return (\n    <SearchForm onSubmit={handleFormSubmit}>\n      <SearchFormButton type=\"submit\">\n        <SearchFormButtonLabel>Search</SearchFormButtonLabel>\n      </SearchFormButton>\n\n      <SearchFormInput\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        value={query}\n        onChange={handleInputChange}\n      />\n    </SearchForm>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import  { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { api } from 'service/api';\nimport MovieList from 'components/Movie/MovieList/MovieList';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport Container from 'components/Container/Container';\n\n\nconst Movies = () => {\n  const [films, setFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState(searchParams.get('query') ?? '');\n\n  useEffect(() => {\n    if (query) {\n      try {\n        api.fetchFilmsByName(query).then(({ data }) => {\n          if (data.results.length === 0) {\n            setSearchParams('');\n          }\n\n          setFilms(data.results);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query]);\n  const handleFormSubmit = query => {\n    setQuery(query);\n    setSearchParams(query !== '' ? { query } : {});\n  };\n  return (\n    <main>\n      <Container>\n        <Searchbar onSubmit={handleFormSubmit} query={query} />\n        {films.length > 0 && <MovieList films={films} />}\n      </Container>\n    </main>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '96b1936b39533cd9542a6bf2c841f4c7',\n  },\n})\nconst fetchFilms =  () =>  instance.get(`/trending/movie/day`);\n\nconst fetchFilmsByName = async query =>\n   instance.get(`/search/movie`, { params: { query } });\n\nconst fetchFilmById = async id =>  instance.get(`/movie/${id}`);\n\nconst fetchFilmCast = async id =>  instance.get(`/movie/${id}/credits`);\n\nconst fetchFilmReviews = async id =>  instance.get(`/movie/${id}/reviews`);\n\nexport const api = {\n  fetchFilms,\n  fetchFilmsByName,\n  fetchFilmById,\n  fetchFilmCast,\n  fetchFilmReviews,\n};\n"],"names":["MainContainer","styled","children","ImagePlaceholder","pathImage","height","includes","slice","length","Link","NavLink","List","Item","id","poster_path","title","location","useLocation","to","state","from","width","src","alt","films","map","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","onSubmit","useSearchParams","searchParams","setSearchParams","query","get","e","preventDefault","type","autoComplete","autoFocus","placeholder","value","onChange","name","target","useState","setFilms","setQuery","useEffect","api","then","data","results","error","console","log","Container","MovieList","instance","axios","baseURL","params","api_key","fetchFilmsByName","fetchFilmById","fetchFilmCast","fetchFilmReviews","fetchFilms"],"sourceRoot":""}